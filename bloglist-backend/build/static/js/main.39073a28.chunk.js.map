{"version":3,"sources":["components/Notification.js","components/Blogs.js","services/login.js","services/blogs.js","reducers/notificationReducer.js","reducers/loginReducer.js","components/LoginForm.js","reducers/blogReducer.js","components/BlogForm.js","components/UserInfo.js","components/User.js","components/Comment.js","components/Blog.js","components/ToggleComponent.js","components/Users.js","App.js","store.js","index.js"],"names":["Notification","message","useSelector","state","notification","Alert","id","variant","ListofBlogs","blogs","index","history","useHistory","classLink","cursor","color","textDecoration","backgroundColor","style","fontFamily","Color","ListGroup","map","blog","Item","onClick","push","title","Blogs","sort","firstEl","secondEl","likes","login","credentials","a","axios","post","response","data","baseUrl","token","getAll","get","headers","Authorization","request","getBlogsFromId","postBlog","newBlog","commentblog","comment","console","log","comments","changeblog","changedblog","blogid","newblog","user","author","url","JSON","stringify","put","deleteblog","blogToBeDeleted","delete","setToken","newToken","previoustimeOutId","changeNotification","clearTimeout","dispatch","type","Promise","resolve","setTimeout","notificationReducer","action","handleUserLogin","username","password","loginService","window","localStorage","setItem","blogService","loginReducer","loginForm","useState","setUsername","setPassword","useDispatch","handleLogin","event","preventDefault","Form","onSubmit","margin","Group","className","Label","Control","value","placeholder","name","onChange","target","Button","increaseBlogLikes","changedBlog","removeBlog","confirm","blogComment","blogReducer","blogToChange","find","n","copyState","indexOf","splice","BlogInputForm","addBlog","newBlogTitle","setNewBlogTitle","newBlogAuthor","setNewBlogAuthor","newBlogUrl","setNewBlogUrl","BlogForm","addedBlog","addNewBlog","UserInfo","size","User","useParams","useEffect","length","Comments","setComment","postComment","element","Blog","increaseLikes","deleteBlog","loggedUserJSON","getItem","loggedBlogUser","parse","header","paddingTop","paddingLeft","borderWidth","marginBottom","href","Comment","ToggleComponent","React","forwardRef","props","ref","newBlogVisible","setNewBlogVisible","hideWhenVisible","display","showWhenVisible","buttonLabel","children","displayName","ListofUsers","listofusers","Object","entries","key","Users","users","forEach","App","loggeduser","handleCurrentUser","LoginForm","Navbar","bg","expand","Container","Toggle","Collapse","Nav","Link","as","to","marginTop","textAlign","fontSize","path","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39073a28.chunk.js","sourcesContent":["import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Alert } from \"react-bootstrap\"\n\n\nconst Notification = () => {\n    const message = useSelector(state => state.notification)\n\n    if (message === \"Wrong credentials\" || message === \"Bad request\") {\n        return (\n            <Alert id=\"errorMessage\" variant=\"danger\">\n                {message}\n            </Alert>\n        )\n    } else if (message !== null) {\n        return (\n            <Alert id=\"successMessage\" variant=\"success\">\n                {message}\n            </Alert>\n        )\n    }\n\n    else {\n        return (<div></div>)\n    }\n}\n\nexport default Notification","import { useSelector } from \"react-redux\"\nimport React from \"react\"\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\"\nimport { ListGroup } from \"react-bootstrap\"\nconst ListofBlogs = ({ blogs }) => {\n    let index = 0\n    const history = useHistory()\n    const header = {\n        fontFamily: \"CopperPlate\",\n        Color: \"Grey\"\n    }\n    const classLink = {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textDecoration: \"none\",\n        backgroundColor: \"transparent\"\n    }\n    return (\n        <Router>\n            <h2 style={header}>Blogs</h2>\n            <ListGroup>\n\n\n                {blogs.map(blog => {\n                    index += 1\n                    return (\n                        <ListGroup.Item key={index}>\n                            <a style={classLink} onClick={() => history.push(`/blogs/${blog.id}`)}>\n                                {blog.title}\n                            </a>\n                        </ListGroup.Item>)\n                })\n                }\n\n            </ListGroup>\n        </Router >)\n}\n\nconst Blogs = () => {\n    const blogs = useSelector(state => state.blog)\n\n    blogs.sort((firstEl, secondEl) => {\n        return firstEl.likes - secondEl.likes\n    })\n\n    return (\n        <ListofBlogs blogs={blogs} />\n    )\n}\nexport default Blogs","import axios from \"axios\"\nconst baseUrl = \"/api/login\"\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import axios from \"axios\"\nconst baseUrl = \"/api/blogs\"\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const request = await axios\n        .get(baseUrl, { headers: { Authorization: token } })\n    return request.data\n\n}\nconst getBlogsFromId = async (id) => {\n    const request = await axios\n        .get(`${baseUrl}/${id}`, { headers: { Authorization: token } })\n    return request.data\n}\n\nconst postBlog = async (newBlog) => {\n    const request = await axios\n        .post(baseUrl, newBlog, { headers: { Authorization: token } })\n    return request.data\n}\n\nconst commentblog = async (comment, id) => {\n    console.log(comment)\n    const request = await axios\n        .post(`${baseUrl}/${id}/comments`, { comments: comment }, { headers: { Authorization: token } })\n    console.log(request.data)\n    return request.data\n}\n\nconst changeblog = async (changedblog) => {\n    const blogid = changedblog.id\n    const newblog = {\n        user: changedblog.user.id,\n        title: changedblog.title,\n        author: changedblog.author,\n        url: changedblog.url,\n        likes: JSON.stringify(changedblog.likes + 1)\n\n    }\n    const request = await axios\n        .put(`${baseUrl}/${blogid}`, newblog, { headers: { Authorization: token } })\n    return request.data\n\n}\n\nconst deleteblog = async (blogToBeDeleted) => {\n    const blogid = blogToBeDeleted.id\n    await axios\n        .delete(`${baseUrl}/${blogid}`, { headers: { Authorization: token } })\n}\n\nexport default { getAll, getBlogsFromId, setToken, postBlog, changeblog, deleteblog, commentblog }","const initialNotificationstate = null\nlet previoustimeOutId = 0\n\nexport const changeNotification = (notification) => {\n    clearTimeout(previoustimeOutId)\n    return async dispatch => {\n\n        dispatch({\n            type: \"SetNotification\",\n            data: notification\n        })\n        await new Promise(resolve => { previoustimeOutId = setTimeout(resolve, 5000) })\n        dispatch({\n            type: \"SetNotification\",\n            data: null\n        })\n    }\n}\nconst notificationReducer = (state = initialNotificationstate, action) => {\n    switch (action.type) {\n        case \"SetNotification\": {\n            return action.data\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default notificationReducer\n\n","import loginService from \"../services/login\"\nimport blogService from \"../services/blogs\"\nimport { changeNotification } from \"./notificationReducer\"\n\nexport const handleCurrentUser = (user) => {\n    return dispatch => {\n        if (user) {\n            blogService.setToken(user.token)\n            dispatch({\n                type: \"LoginUser\",\n                data: user\n            })\n        }\n    }\n}\nexport const handleUserLogin = (username, password) => {\n    return async dispatch => {\n        try {\n            const user = await loginService.login({\n                username, password,\n            })\n            window.localStorage.setItem(\n                \"loggedBlogUser\", JSON.stringify(user)\n            )\n            blogService.setToken(user.token)\n            dispatch({\n                type: \"LoginUser\",\n                data: user\n            })\n            dispatch(changeNotification(`${username} has successfully logged in`))\n\n\n        } catch (exception) {\n            dispatch(changeNotification(\"Wrong credentials\"))\n        }\n    }\n}\n\nexport const handleUserLogout = () => {\n    return dispatch => {\n        dispatch({\n            type: \"LogoutUser\",\n            data: null\n        })\n    }\n}\nconst loginReducer = (state = null, action) => {\n    switch (action.type) {\n        case \"LoginUser\": {\n            return action.data\n        }\n        case \"LogoutUser\": {\n            return null\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default loginReducer","import React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { handleUserLogin } from \"../reducers/loginReducer\"\nimport { Form, Button } from \"react-bootstrap\"\nconst loginForm = () => {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const dispatch = useDispatch()\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n        dispatch(handleUserLogin(username, password))\n    }\n    const header = {\n        color: \"Blue\",\n        fontFamily: \"Monaco\",\n        margin: \"10px\"\n    }\n\n    return (\n        <Form onSubmit={handleLogin}>\n            <h2 style={header} id=\"loginTitle\">Login to Application</h2>\n            <Form.Group className=\"mb-3\">\n                <Form.Label> Username </Form.Label>\n                <Form.Control\n                    id=\"usernameInput\"\n                    type=\"text\"\n                    value={username}\n                    placeholder=\"Enter Username\"\n                    name=\"Username\"\n                    onChange={({ target }) => setUsername(target.value)}\n                />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                    id=\"passwordInput\"\n                    type=\"password\"\n                    value={password}\n                    placeholder=\"Enter Password\"\n                    name=\"Password\"\n                    onChange={({ target }) => setPassword(target.value)}\n                />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" id=\"loginSubmit\">Login</Button>\n        </Form>\n    )\n}\n\nexport default loginForm","import blogService from \"../services/blogs\"\nimport { changeNotification } from \"./notificationReducer\"\n\nexport const increaseBlogLikes = (changedBlog) => {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: \"IncreaseVote\",\n                data: changedBlog\n            })\n            dispatch(changeNotification(`${changedBlog.title} has been liked`))\n            await blogService.changeblog(changedBlog)\n        } catch (exception) {\n            dispatch(changeNotification(\"Bad request\"))\n\n        }\n    }\n}\nexport const addNewBlog = (newBlog) => {\n    return async dispatch => {\n        try {\n            const addedBlog = await blogService.postBlog(newBlog)\n            console.log(addedBlog)\n            dispatch({\n                type: \"AddedBlog\",\n                data: addedBlog\n            })\n            dispatch(changeNotification(`${newBlog.title} by ${newBlog.author} has successfully been added`))\n        } catch (exception) {\n            dispatch(changeNotification(\"Bad request\"))\n        }\n    }\n}\n\nexport const removeBlog = (blogToBeDeleted) => {\n    return async dispatch => {\n        if (window.confirm(\"Do you really want to delete this blog?\")) {\n            try {\n                dispatch(changeNotification(`${blogToBeDeleted.title} has been deleted`))\n                dispatch({\n                    type: \"DeleteBlog\",\n                    data: blogToBeDeleted\n                })\n                await blogService.deleteblog(blogToBeDeleted)\n            } catch (exception) {\n                console.log(exception)\n                dispatch(changeNotification(\"Bad request\"))\n            }\n        }\n    }\n}\nexport const initializeBlogs = () => {\n    return async dispatch => {\n        const blogs = await blogService.getAll()\n        dispatch({\n            type: \"InitBlogs\",\n            data: blogs,\n        })\n    }\n}\nexport const blogComment = (comment, id) => {\n    return async dispatch => {\n        dispatch({\n            type: \"CommentBlog\",\n            data: { comment, id }\n        })\n        dispatch(changeNotification(`${comment} has been added`))\n        await blogService.commentblog(comment, id)\n    }\n}\nexport const getBlogsFromId = (id) => {\n    return async dispatch => {\n        const blogs = await blogService.getBlogsFromId(id)\n        dispatch({\n            type: \"GetBlogsFromId\",\n            data: blogs,\n        })\n    }\n}\nconst blogReducer = (state = [], action) => {\n    switch (action.type) {\n        case \"IncreaseVote\": {\n            const id = action.data.id\n            const blogToChange = state.find(n => n.id === id)\n            const changedBlog = {\n                ...blogToChange,\n                likes: blogToChange.likes += 1\n            }\n            const copyState = [...state]\n            copyState.map(blog =>\n                blog.id !== id ? blog : changedBlog\n            )\n            console.log(copyState)\n            return copyState\n        }\n        case \"DeleteBlog\": {\n            const index = state.indexOf(action.data)\n            const copyState = [...state]\n            copyState.splice(index, index + 1)\n            return copyState\n        }\n        case \"AddedBlog\": {\n            console.log([...state, action.data])\n            return [...state, action.data]\n        }\n        case \"InitBlogs\": {\n            return action.data\n        }\n        case \"GetBlogsFromId\": {\n            return action.data\n        }\n        case \"CommentBlog\": {\n            const id = action.data.id\n            const blogToChange = state.find(n => n.id === id)\n            const changedBlog = {\n                ...blogToChange,\n                comments: blogToChange.comments.push(action.data.comment)\n            }\n            const copyState = [...state]\n            copyState.map(blog =>\n                blog.id !== id ? blog : changedBlog\n            )\n            return copyState\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default blogReducer","import React, { useState } from \"react\"\nimport { changeNotification } from \"../reducers/notificationReducer\"\nimport { addNewBlog } from \"../reducers/blogReducer\"\nimport { useDispatch } from \"react-redux\"\nimport { Form, Button } from \"react-bootstrap\"\n\n\nconst BlogInputForm = ({\n    addBlog,\n    newBlogTitle,\n    setNewBlogTitle,\n    newBlogAuthor,\n    setNewBlogAuthor,\n    newBlogUrl,\n    setNewBlogUrl }) => {\n\n    const header = {\n        fontFamily: \"CopperPlate\",\n        Color: \"Grey\"\n    }\n    return (\n        <Form onSubmit={addBlog}>\n            <h2 style={header}>create new </h2>\n            <Form.Group className=\"mb-3\">\n                <Form.Label> Title:</Form.Label>\n                <Form.Control\n                    id='Title'\n                    type=\"text\"\n                    value={newBlogTitle}\n                    placeholder=\"Enter Blog Title\"\n                    name=\"Title\"\n                    onChange={({ target }) => setNewBlogTitle(target.value)}\n                />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Author:</Form.Label>\n                <Form.Control\n                    id='Author'\n                    type=\"text\"\n                    value={newBlogAuthor}\n                    placeholder=\"Enter Blog's Author\"\n                    name=\"Author\"\n                    onChange={({ target }) => setNewBlogAuthor(target.value)}\n                />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n                <Form.Label>Url:</Form.Label>\n                <Form.Control\n                    id='Url'\n                    type=\"text\"\n                    value={newBlogUrl}\n                    placeholder=\"Enter Blog's Url\"\n                    name=\"Url\"\n                    onChange={({ target }) => setNewBlogUrl(target.value)}\n                />\n            </Form.Group >\n            <Button id=\"SubmitButton\" type=\"submit\">Submit</Button>\n        </Form >\n    )\n}\n\nconst BlogForm = () => {\n    const [newBlogTitle, setNewBlogTitle] = useState(\"\")\n    const [newBlogAuthor, setNewBlogAuthor] = useState(\"\")\n    const [newBlogUrl, setNewBlogUrl] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    const addBlog = (event) => {\n        event.preventDefault()\n        const newBlog = {\n            title: newBlogTitle,\n            author: newBlogAuthor,\n            url: newBlogUrl\n        }\n        dispatch(addNewBlog(newBlog), changeNotification(newBlog))\n\n\n\n        setNewBlogTitle(\"\")\n        setNewBlogAuthor(\"\")\n        setNewBlogUrl(\"\")\n    }\n\n    return (\n        <BlogInputForm\n            addBlog={addBlog}\n            newBlogTitle={newBlogTitle}\n            setNewBlogTitle={setNewBlogTitle}\n            newBlogAuthor={newBlogAuthor}\n            setNewBlogAuthor={setNewBlogAuthor}\n            newBlogUrl={newBlogUrl}\n            setNewBlogUrl={setNewBlogUrl}\n        />\n    )\n}\n\n\nexport default BlogForm","import React from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { handleUserLogout } from \"../reducers/loginReducer\"\nimport { Button } from \"react-bootstrap\"\n\nconst UserInfo = () => {\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.login.username)\n\n    const handleLogout = (event) => {\n        event.preventDefault()\n        window.localStorage.setItem(\"loggedBlogUser\", null)\n        dispatch(handleUserLogout(null))\n    }\n    const colorStyle = {\n        color: \"white\"\n    }\n\n    return (\n        <div >\n            <div style={colorStyle}>{user} is logged in <Button size=\"sm\" onClick={handleLogout}>Logout</Button></div>\n        </div >\n    )\n}\n\nexport default UserInfo","import { getBlogsFromId } from \"../reducers/blogReducer\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { useEffect } from \"react\"\nimport { ListGroup } from \"react-bootstrap\"\n\nconst User = () => {\n    const id = useParams().id\n    let index = 0\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getBlogsFromId(id))\n    }, [id])\n    const blogs = useSelector(state => state.blog)\n    blogs.sort((firstEl, secondEl) => {\n        return firstEl.likes - secondEl.likes\n    })\n    const header = {\n        fontFamily: \"CopperPlate\",\n    }\n    if (blogs.length === 0) {\n        return null\n    }\n\n    else {\n        return (\n            <div>\n                <h2 style={header}>{blogs[0].user.name}</h2>\n                <div><strong>added blogs</strong></div>\n                <ListGroup>\n                    {blogs.map(blog => {\n                        index += 1\n                        return (<ListGroup.Item key={index}>{blog.title}</ListGroup.Item>)\n                    })}\n                </ListGroup>\n\n            </div>)\n    }\n}\n\nexport default User","import React, { useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { blogComment } from \"../reducers/blogReducer\"\nimport { Button, ListGroup, Form } from \"react-bootstrap\"\n\nconst Comments = () => {\n    const dispatch = useDispatch()\n\n    const [comment, setComment] = useState(\"\")\n    const blogs = useSelector(state => state.blog)\n    const id = useParams().id\n    const blog = blogs.find(blog => blog.id === id)\n    const comments = blog.comments\n    let index = 0\n\n    const postComment = async (event) => {\n        event.preventDefault()\n        dispatch(blogComment(comment, id))\n        setComment(\"\")\n\n    }\n\n    return (\n        <div>\n\n            <Form onSubmit={postComment}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Control\n                        id='Comment'\n                        type=\"text\"\n                        value={comment}\n                        placeholder=\"Enter a Comment\"\n                        name=\"Comment\"\n                        onChange={({ target }) => setComment(target.value)} />\n                    <Button size=\"sm\" id=\"SubmitButton\" type=\"submit\">Submit</Button>\n                </Form.Group>\n            </Form>\n            <ListGroup>\n                {comments.map(element => {\n                    if (!element) {\n                        return null\n                    } else {\n                        index++\n                        return <ListGroup.Item key={index}>{element}</ListGroup.Item>\n                    }\n                })}\n            </ListGroup>\n        </div >)\n}\n\nexport default Comments","import { useDispatch, useSelector } from \"react-redux\"\nimport { increaseBlogLikes, removeBlog } from \"../reducers/blogReducer\"\nimport { useParams } from \"react-router-dom\"\nimport Comments from \"./Comment\"\nimport React from \"react\"\nimport { Button } from \"react-bootstrap\"\n\n\nconst Blog = () => {\n    console.log(\"test\")\n    const dispatch = useDispatch()\n    const blogs = useSelector(state => state.blog)\n\n    const id = useParams().id\n\n    const blog = blogs.find(blog => blog.id === id)\n\n    const increaseLikes = async (blog) => {\n        dispatch(increaseBlogLikes(blog))\n    }\n    const deleteBlog = async (blog) => {\n        dispatch(removeBlog(blog))\n    }\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\n    const loggedBlogUser = JSON.parse(loggedUserJSON)\n\n    const header = {\n        fontFamily: \"CopperPlate\",\n        Color: \"Grey\"\n    }\n    const blogStyle = {\n        paddingTop: 10,\n        paddingLeft: 2,\n        borderWidth: 1,\n        marginBottom: 5\n    }\n    if (!blog || blogs.length === 0) {\n        return null\n    } else {\n        return (\n            <div>\n                <div id={blog.title} style={blogStyle}>\n                    <h2 style={header}>{blog.title}</h2>\n                    <a href={blog.url}>{blog.url}</a>\n                    <div id=\"like\">\n                        <div id=\"numberofLikes\">likes {blog.likes}\n                            <Button size=\"sm\" variant=\"outline-primary\" id=\"likeButton\" onClick={() => increaseLikes(blog)}>like</Button>\n                        </div>\n                    </div>\n                    <div>added by {blog.user.username}</div>\n                    <div> {loggedBlogUser.username === blog.user.username ? <Button variant=\"outline-primary\" size=\"sm\" id=\"remove\" onClick={() => deleteBlog(blog)}>remove</Button> : <div></div>}</div>\n                </div>\n                <h2 style={header}>Comments</h2>\n                <Comments />\n            </div >\n        )\n    }\n}\n\nexport default Blog","import React, { useState } from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport PropTypes from \"prop-types\"\n\n\n\n\n\n// eslint-disable-next-line no-unused-vars\nconst ToggleComponent = React.forwardRef((props, ref) => {\n    const [newBlogVisible, setNewBlogVisible] = useState(false)\n\n    const hideWhenVisible = { display: newBlogVisible ? \"none\" : \"\" }\n    const showWhenVisible = { display: newBlogVisible ? \"\" : \"none\" }\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <Button size=\"sm\" id=\"CreateNewBlog\" onClick={() => setNewBlogVisible(true)}>{props.buttonLabel}</Button>\n            </div>\n            <div style={showWhenVisible}>\n                {props.children}\n                <Button size=\"sm\" variant=\"secondary\" onClick={() => setNewBlogVisible(false)}>cancel</Button>\n            </div>\n        </div>\n    )\n})\nToggleComponent.displayName = \"ToggleComponent\"\nToggleComponent.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\nexport default ToggleComponent","import { useSelector } from \"react-redux\"\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\"\nimport React from \"react\"\n\n\nconst ListofUsers = ({ listofusers }) => {\n    let index = 0\n    const history = useHistory()\n    const classLink = {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textDecoration: \"none\",\n        backgroundColor: \"transparent\"\n    }\n    return (\n        <Router>\n\n            {\n                Object.entries(listofusers).map(([key, value]) => {\n                    index += 1\n                    return (<div style={classLink} key={index} onClick={() => history.push(`/users/${value.id}`)}>\n                        {key} {value.blogs}\n                    </div>)\n                })\n            }\n        </Router>)\n}\nconst Users = () => {\n    const users = useSelector(state => state.blog)\n    const listofusers = {}\n    users.forEach(element => {\n        if (element.user.name in listofusers) {\n            listofusers[element.user.name].blogs += 1\n        } else {\n            listofusers[element.user.name] = { id: element.user.id, blogs: 1 }\n        }\n\n    })\n    const header = {\n        fontFamily: \"CopperPlate\",\n    }\n\n    return (\n        <div>\n            <h2 style={header}>Users</h2>\n            <div><strong>blogs created</strong></div>\n            <ListofUsers listofusers={listofusers} />\n        </div >\n    )\n}\n\nexport default Users","import React, { useEffect } from \"react\"\nimport Notification from \"./components/Notification\"\nimport Blogs from \"./components/Blogs\"\nimport LoginForm from \"./components/LoginForm\"\nimport BlogForm from \"./components/BlogForm\"\nimport UserInfo from \"./components/UserInfo\"\nimport User from \"./components/User\"\nimport Blog from \"./components/Blog\"\nimport ToggleComponent from \"./components/ToggleComponent\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { BrowserRouter as Router, Switch, Route, Link, /*useParams, useHistory */ } from \"react-router-dom\"\nimport { initializeBlogs } from \"./reducers/blogReducer\"\nimport { handleCurrentUser } from \"./reducers/loginReducer\"\nimport Users from \"./components/Users\"\nimport { Container, Nav, Navbar } from \"react-bootstrap\"\n\nconst App = () => {\n    const dispatch = useDispatch()\n    const user = useSelector(state => state.login)\n    //const blogs = useSelector(state => state.blog)\n\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\n        const loggeduser = JSON.parse(loggedUserJSON)\n        if (loggeduser) {\n            dispatch(handleCurrentUser(loggeduser))\n        }\n    }, [dispatch])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\n        const loggeduser = JSON.parse(loggedUserJSON)\n        if (loggeduser !== null) {\n            dispatch(initializeBlogs())\n        }\n    }, [user])\n    const header = {\n        color: \"grey\",\n        backgroundColor: \"beige\",\n        fontFamily: \"Lucida Console\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        textAlign: \"center\",\n        fontSize: \"40px\"\n\n    }\n\n\n    return (\n\n        <div className=\"container\">\n            <Notification />\n            {user === null ? <LoginForm />\n                : <Router>\n                    <Navbar bg=\"dark\" expand=\"lg\">\n                        <Container>\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\n                                <Nav>\n                                    <Nav.Link href=\"#\" as=\"span\"><Link to=\"/\">Home </Link></Nav.Link>\n                                    <Nav.Link href=\"#\" as=\"span\"><Link to=\"/users\">Users </Link></Nav.Link>\n                                    <Nav.Link><UserInfo /></Nav.Link>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Container>\n                    </Navbar>\n                    <h2 style={header}>Blog App</h2>\n                    <Switch>\n                        <Route path=\"/blogs/:id\" >\n                            <Blog />\n                        </Route>\n                        <Route path=\"/users/:id\">\n                            <User />\n                        </Route>\n                        <Route path=\"/users\">\n                            <Users />\n                        </Route>\n                        <Route path=\"/\">\n                            <ToggleComponent buttonLabel=\"create new blog\">\n                                <BlogForm />\n                            </ToggleComponent>\n                            <Blogs />\n                        </Route>\n                    </Switch>\n                </Router>}\n\n        </div >\n    )\n}\n\n\nexport default App","import { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport notificationReducer from \"./reducers/notificationReducer\"\nimport blogReducer from \"./reducers/blogReducer\"\nimport loginReducer from \"./reducers/loginReducer\"\nconst reducer = combineReducers({\n    notification: notificationReducer,\n    blog: blogReducer,\n    login: loginReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport App from \"./App\"\nimport store from \"./store\"\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider >, document.getElementById(\"root\"))"],"sourceRoot":""}